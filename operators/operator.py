"""Operator abstract class.

Given a state (basis), an operator gives all the states and coefficients it
leads to by acting on the state.
"""
from __future__ import absolute_import
from __future__ import division
from __future__ import print_function

from abc import ABC, abstractmethod
from typing import Tuple

import numpy as np


class Operator(ABC):

    @abstractmethod
    def find_states(self, state: np.ndarray) -> Tuple[np.ndarray, np.ndarray]:
        """Finds states and coefficients generated by the operator.

        Given a state, return the states with the coefficients generated by the
        operator after acting on this state. The returned states are stored in a
        numpy array with first dimension M, where M is the number of states
        generated by the Operator. The returned coefficients are stored in a
        length M numpy 1D array.

        Args:
            state: A given state.
        Returns:
            A tuple of (states, coefficients) generated by the operator.
        """
        raise NotImplementedError
